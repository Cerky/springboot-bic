<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.example</groupId>
    <artifactId>springboot-bic</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>springboot-bic</name>
    <description>springboot基础搭建和学习</description>

    <properties>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <spring-boot.version>2.3.7.RELEASE</spring-boot.version>
    </properties>

    <dependencies>
        <!--Web场景启动器，提供了嵌入的Servlet容器以及SpringMVC的依赖，默认引入了核心启动器 spring-boot-starter-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!--springboot应用程序测试-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <!--移除Junit-4测试引擎-->
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <!--依赖声明-->
    <dependencyManagement>
        <!--springboot版本依赖管理-->
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope><!--解决Maven项目单继承问题，通过非继承的方式来引入这段依赖管理配置-->
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <!--配置项目编译插件和jdk版本，不配置会用默认的maven-compiler-plugin和默认的jdk版本来进行处理-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>1.8</source><!--源代码使用的开发版本-->
                    <target>1.8</target><!--需要生成的目标class文件的编译版本-->
                    <encoding>UTF-8</encoding><!--编译字符串编码-->
                </configuration>
            </plugin>
            <!--springboot-maven打包命令插件，用于构建一个胖JAR（包含内置tomcat等）-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.3.7.RELEASE</version>
                <configuration>
                    <!--指定启动类（默认自动寻找签名是public static void main(String[] args)的方法，如有多个，需指定）-->
                    <mainClass>com.example.springbootbic.SpringbootBicApplication</mainClass>
                </configuration>
                <executions>
                    <execution>
                        <id>repackage</id>
                        <goals>
                            <goal>repackage</goal><!--重新打包命令-->
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
